name: CI and Deploy to Cloud Run

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main  # Only run on changes to the main branch

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Run tests with pytest
        run: |
          pytest -n auto --cov=./ --cov-report=xml  # XML report for Codecov integration

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml  # XML coverage report
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          name: codecov-coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: htmlcov  # Optional: HTML report for local download

  security_scan:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Only run on main branch
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Install Snyk
        run: |
          npm install -g snyk  # Install Snyk CLI globally

      - name: Run Snyk security scan
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          snyk test --file=requirements.txt --package-manager=pip  # Specify requirements file for Python

  container:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: test  # Only build container if tests pass
    if: github.ref == 'refs/heads/main'  # Run on merges to main branch only
    steps:
      - uses: actions/checkout@v3
      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Build and push the Docker image to Docker Hub
      - name: Build and Push Docker Image
        run: |
          docker build -t docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/note-api:latest .
          docker push docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/note-api:latest

  deploy_to_cloudrun:
    runs-on: ubuntu-latest
    needs: container
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: 'projects/70756149774/locations/global/workloadIdentityPools/github-actions/providers/github-repos'
          service_account: 'hshn-devsecops-service-account@hs-heilbronn-devsecops.iam.gserviceaccount.com'

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: note-api-teamrocket
          image: docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/note-api:latest
          #region: us-central1  # Replace with your desired region
          #platform: managed
          env_vars: BACKEND=memory
