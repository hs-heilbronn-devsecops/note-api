name: CI Pipeline

on:
  workflow_dispatch:
  push: 
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  security-events: write
  packages: write  # Required to push to GitHub Packages (GHCR)

jobs:
  test-and-coverage:
    name: Run tests and collect coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Run tests with pytest and coverage
        run: |
          pytest --cov=./ --cov-report=xml --numprocesses=auto

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
          fail_ci_if_error: true

      - name: Upload coverage report to GitHub Artifacts
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml

      - name: Test run status
        run: |
          echo "Test run status: ${{ job.status }}"

  snyk-scan:
    name: Snyk Security Scan
    runs-on: ubuntu-latest
    needs: test-and-coverage

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Specify Python version
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Run Snyk to check for vulnerabilities
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}  # Ensure this secret is set correctly
        run: |
          snyk test --file=requirements.txt --packageManager=pip --skip-unresolved=true --json-file-output=snyk.json

      - name: Run Snyk to check for development vulnerabilities
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}  # Ensure this secret is set correctly
        run: |
          snyk test --file=requirements-dev.txt --packageManager=pip --skip-unresolved=true --json-file-output=snyk-dev.json

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ github.workspace }}/snyk.sarif

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: snyk-scan
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker Image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/your-image-name:latest .

      - name: Push Docker Image
        run: |
          docker push ghcr.io/${{ github.repository }}/your-image-name:latest
